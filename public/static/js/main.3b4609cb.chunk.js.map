{"version":3,"sources":["redux/variables.js","redux/AuthDuck.js","components/Home/authForm.js","components/Home/Profile.js","components/Home/navbar.js","components/Home/HomeRoute.js","redux/UsersDuck.js","utils/formatters.js","components/Common/UserForm.js","components/Users/NewUser.js","components/Users/TableCard.js","components/Common/EditForm.js","components/Users/EditUser.js","components/Users/DeleteUser.js","components/Users/UsersTable.js","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["base_url","axios","defaults","withCredentials","LOADING","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_SUCCESS","initialState","data","JSON","parse","localStorage","getItem","status","error","undefined","login","credentials","dispatch","type","post","then","res","user","setItem","stringify","payload","catch","response","logout","removeItem","Error","styled","div","AuthForm","useDispatch","useForm","mode","register","handleSubmit","errors","className","uk-grid","src","alt","uk-cover","onSubmit","values","uk-icon","name","ref","required","username","password","dayjs","extend","LocalizedFormat","ProfileCard","ProfileBody","Title","h3","Profile","useSelector","state","width","height","profile_picture","last_name","createdAt","locale","format","Navbar","uk-navbar","href","uk-navbar-toggle-icon","uk-dropdown","to","uk-img","onClick","Home","GET_USERS_SUCCESS","GET_USERS_ERROR","CREATE_USER_ERROR","EDIT_USER_SUCCESS","EDIT_USER_ERROR","DELETE_USER_ERROR","SEARCH_USER_ERROR","users","deleteUserSuccess","getUsers","get","reduce","acc","item","_id","err","createUser","headers","msg","searchUser","id","UserForm","preloadedValues","placeholder","min","role","uk-form-custom","tabIndex","NewUser","uk-toggle","uk-modal","uk-close","formData","FormData","key","append","TableCard","EditForm","useState","setUser","handleChange","e","target","value","files","prevState","onChange","EditUser","editableUser","hidden","DeleteUser","delete","deleteUser","UserPicture","img","TableBorder","table","TableTitle","h2","TableHead","td","TableCell","UsersTable","obj","useEffect","uk-overflow-auto","Object","map","index","Routes","exact","path","component","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","UIkit","use","Icons","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3b4609cb.chunk.js","sourcesContent":["const isProduction = process.env.NODE_ENV === \"production\";\nexport const base_url = isProduction\n  ? \"https://cleanvel.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";","import axios from \"axios\";\nimport { base_url } from \"./variables\";\naxios.defaults.withCredentials = true;\n\n//Action types\nconst LOADING = \"cleanvel/user/LOADING\";\nconst LOGIN_SUCCESS = \"cleanvel/user/LOGIN_SUCCESS\";\nconst LOGIN_ERROR = \"cleanvel/user/LOGIN_ERROR\";\nconst LOGOUT_SUCCESS = \"cleanvel/user/LOGOUT_SUCCESS\";\n\nconst initialState = {\n    data: JSON.parse(localStorage.getItem(\"user\")),\n    status: \"\",\n    error: undefined,\n};\n\n\n//Reucer\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, status: \"pending\" };\n        case LOGIN_SUCCESS:\n            return { status: \"success\", data: { ...action.payload } };\n        case LOGIN_ERROR:\n            return { status: \"error\", error: action.error };\n        case LOGOUT_SUCCESS:\n            return initialState;\n        default:\n            return state;\n    }\n}\n\n\n//Action creators\nexport const loadingUser = () => ({\n    type: LOADING,\n});\n\nexport const loginSuccess = (payload) => ({\n    type: LOGIN_SUCCESS,\n    payload,\n});\n\nexport const loginError = (error) => ({\n    type: LOGIN_ERROR,\n    error,\n});\n\nexport const logoutSuccess = () => ({\n    type: LOGOUT_SUCCESS,\n});\n\n\n//login thunk\nexport const login = (credentials) => (dispatch) => {\n    dispatch(loadingUser());\n    return axios\n        .post(`${base_url}/login`, credentials)\n        .then((res) => {\n            const user = res.data.user;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            dispatch(loginSuccess(user));\n        })\n        .catch((res) => dispatch(loginError(res.response.data)));\n};\n\n//logout thunk\nexport const logout = () => (dispatch) => {\n    return axios\n        .post(`${base_url}/logout`)\n        .then(() => {\n            localStorage.removeItem(\"user\");\n            dispatch(logoutSuccess());\n        });\n};\n\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/AuthDuck\";\nimport styled from \"styled-components\";\n\nconst Error = styled.div`\ncolor:red;\nfont-size: 15px;\n`\n\nconst AuthForm = () => {\n    const dispatch = useDispatch();\n    const { register, handleSubmit, errors } = useForm({\n        mode: \"onBlur\",\n    });\n\n    const onSubmit = (values) => {\n        dispatch(login(values));\n    };\n\n    return (\n        <div className=\"authform-background\">\n            <div className=\"authform\">\n                <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-2@s uk-margin uk-width-3xlarge\" uk-grid=\"true\">\n                    <div className=\"uk-card-media-left uk-cover-container\">\n                        <img src=\"/images/cleanvel-login.jpeg\" alt=\"\" uk-cover=\"true\" />\n                    </div>\n                    <div className=\"uk-card-body\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div>\n                                <img src=\"/images/cleanvel-logo.png\" alt=\"\" />\n                            </div>\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                    <input\n                                        className=\"uk-input\"\n                                        name=\"username\"\n                                        type=\"text\"\n                                        ref={register({ required: true })}\n                                    />\n                                </div>\n                                {errors.username && <Error>El usuario es requerido</Error>}\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: lock\"></span>\n                                    <input\n                                        className=\"uk-input\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        ref={register({ required: true })}\n                                    />\n                                </div>\n                                {errors.password && <Error>La contraseña es requerida</Error>}\n                            </div>\n                            <button className=\"uk-button uk-button-default\">Login</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AuthForm;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/es\"\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\ndayjs.extend(LocalizedFormat);\n\nconst ProfileCard = styled.div`\nalign-items: center;\n`\nconst ProfileBody = styled.div`\nalign-items: center;\ntext-align: center;\ncolor: rgb(7, 9, 48);\n`\nconst Title = styled.h3`\ncolor: rgb(17, 107, 9);\nfont-weight: 500;\n`\n\nconst Profile = () => {\n    const user = useSelector(state => state.user.data);\n\n    return (\n        <ProfileCard className=\"uk-card\">\n            <ProfileBody className=\"uk-card-body\">\n                <img className=\"uk-border-circle uk-align-center\" width=\"90\" height=\"90\" src={user.profile_picture ? user.profile_picture : \"/images/cleanvel-logo-letter.png\"} alt={user.name} />\n                <Title className=\"uk-card-title uk-margin-remove\">{user.name} {user.last_name}</Title>\n                <p className=\"uk-margin-remove\">Usuario: {user.username}</p>\n                <p className=\"uk-margin-remove\">Activo desde {dayjs(user.createdAt).locale(\"es\").format(\"MMMM YYYY\")}</p>\n                <button className=\"uk-margin-top uk-button\">Editar</button>\n            </ProfileBody>\n        </ProfileCard>\n    )\n};\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../redux/AuthDuck\";\nimport Profile from \"./Profile\";\n\nconst Navbar = (user) => {\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"true\">\n\n            <div className=\"uk-navbar-left uk-margin-left\">\n                <div>\n                    <a className=\"uk-navbar-toggle\" href=\"/\">\n                        <span uk-navbar-toggle-icon=\"true\"></span>\n                    </a>\n                    <div uk-dropdown=\"mode: click\">\n                        <ul className=\"uk-nav uk-dropdown-nav\">\n                            <li className=\"uk-active nav-name-text\">\n                                <Link className=\"uk-text-capitalize\" to=\"/usuarios\">\n                                    <span className=\"uk-margin-small-right\" uk-icon=\"users\"></span>\n                                    <span className=\"nav-name-text\">Usuarios</span>\n                                </Link>\n                            </li>\n                            <li className=\"uk-active nav-name-text\">\n                                <a className=\"uk-text-capitalize\" href=\"/\">\n                                    <span className=\"uk-margin-small-right\" uk-icon=\"location\"></span>\n                                    <span className=\"nav-name-text\">Tiendas</span>\n                                </a>\n                            </li>\n                            <li className=\"uk-active nav-name-text\">\n                                <a className=\"uk-text-capitalize\" href=\"/\">\n                                    <span className=\"uk-margin-small-right\" uk-icon=\"list\"></span>\n                                    <span className=\"nav-name-text\">Inventario</span>\n                                </a>\n                            </li>\n                            <li className=\"uk-active nav-name-text\">\n                                <a className=\"uk-text-capitalize\" href=\"/\">\n                                    <span className=\"uk-margin-small-right\" uk-icon=\"cart\"></span>\n                                    <span className=\"nav-name-text\">Ventas</span>\n                                </a>\n                            </li>\n                            <li className=\"uk-active nav-name-text\">\n                                <a className=\"uk-text-capitalize\" href=\"/\">\n                                    <span className=\"uk-margin-small-right\" uk-icon=\"folder\"></span>\n                                    <span className=\"nav-name-text\">Reportes</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <span className=\"nav-name-text\">Menu</span>\n            </div>\n\n            <div className=\"uk-navbar-center\">\n                <Link to=\"/\">\n                    <img src=\"/images/cleanvel-logo.png\" width={280} alt=\"logo\" uk-img=\"true\" />\n                </Link>\n            </div>\n\n            <div className=\"uk-navbar-right\">\n                <ul className=\"uk-navbar-nav\">\n                    <li>\n                        <a className=\"uk-text-capitalize uk-navbar-toggle\" href=\"/\">\n                            <span className=\"nav-name-text\">{user.user.name} </span>\n                            <span className=\"uk-margin-small-left\" uk-icon=\"user\"></span>\n                        </a>\n                        <div className=\"profile-card uk-margin-remove uk-padding-remove\" uk-dropdown=\"mode: click\">\n                            <Profile />\n                        </div>\n                    </li>\n                    <li>\n                        <a className=\"uk-text-capitalize\" href=\"/\" onClick={handleLogout}>\n                            <span className=\"nav-name-text\">Salir</span>\n                            <span className=\"uk-margin-small-left\" uk-icon=\"sign-out\"></span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default Navbar;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AuthForm from \"./authForm\";\nimport Navbar from \"./navbar\";\n\nconst Home = () => {\n    const user = useSelector(state => state.user.data);\n\n    return (\n        <div className=\"home\">\n            {!user && <AuthForm />}\n            {user && <Navbar user={user} />}\n        </div>\n    )\n};\n\nexport default Home;","import axios from \"axios\";\nimport { base_url } from \"./variables\";\nimport { normalizeData } from \"../utils/formatters\";\n\n//Action types\nconst LOADING = \"cleanvel/products/LOADING\";\nconst GET_USERS_SUCCESS = \"cleanvel/products/GET_USERS_SUCCESS\";\nconst GET_USERS_ERROR = \"cleanvel/products/GET_USERS_ERROR\";\n\nconst CREATE_USER_SUCCESS = \"cleanvel/products/CREATE_USER_SUCCESS\"\nconst CREATE_USER_ERROR = \"cleanvel/products/CREATE_USER_ERROR\"\n\nconst EDIT_USER_SUCCESS = \"cleanvel/products/EDIT_USER_SUCCESS\"\nconst EDIT_USER_ERROR = \"cleanvel/products/EDIT_USER_ERROR\"\n\nconst DELETE_USER_SUCCESS = \"cleanvel/products/DELETE_USER_SUCCESS\"\nconst DELETE_USER_ERROR = \"cleanvel/products/DELETE_USER_ERROR\"\n\nconst SEARCH_USER_SUCCESS = \"cleanvel/products/SEARCH_USER_SUCCESS\"\nconst SEARCH_USER_ERROR = \"cleanvel/products/SEARCH_USER_ERROR\"\n\n\n//Setting initial state\nconst initialState = {\n    users: {},\n    status: \"\",\n    error: undefined,\n};\n\n//Reducer\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case LOADING:\n            return { ...state, status: \"pending\" };\n        case GET_USERS_SUCCESS:\n            return { ...state, status: \"success\", users: { ...action.payload } };\n        case GET_USERS_ERROR:\n            return { ...state, status: \"error\", error: action.error }\n\n        case CREATE_USER_SUCCESS:\n            return { ...state, status: \"success\", users: { ...state.users, [action.payload._id]: action.payload } }\n        case CREATE_USER_ERROR:\n            return { ...state, status: \"error\", error: action.error }\n\n        case EDIT_USER_SUCCESS:\n            return { ...state, status: \"success\", users: { ...state.users, [action.payload._id]: action.payload } }\n        case EDIT_USER_ERROR:\n            return { ...state, status: \"error\", error: action.error }\n\n        case DELETE_USER_SUCCESS:\n            return { ...state, status: \"success\" }\n        case DELETE_USER_ERROR:\n            return { ...state, status: \"error\", error: action.error }\n\n        case SEARCH_USER_SUCCESS:\n            return { ...state, status: \"success\", editableUser: { ...action.payload } }\n        case SEARCH_USER_ERROR:\n            return { ...state, status: \"error\", error: action.error }\n\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport const loadingUsers = () => ({\n    type: LOADING,\n});\n\nexport const getUsersSuccess = (payload) => ({\n    type: GET_USERS_SUCCESS,\n    payload,\n});\n\nexport const getUsersError = (error) => ({\n    type: GET_USERS_ERROR,\n    error,\n});\n\nexport const createUserSuccess = (payload) => ({\n    type: CREATE_USER_SUCCESS,\n    payload,\n});\n\nexport const createUserError = (error) => ({\n    type: CREATE_USER_ERROR,\n    error,\n});\n\n\nexport const editUserSuccess = (payload) => ({\n    type: EDIT_USER_SUCCESS,\n    payload,\n});\n\nexport const editUserError = (error) => ({\n    type: EDIT_USER_ERROR,\n    error,\n});\n\nexport const deleteUserSuccess = (payload) => ({\n    type: DELETE_USER_SUCCESS,\n    payload,\n});\n\nexport const deleteUserError = (error) => ({\n    type: DELETE_USER_ERROR,\n    error,\n});\n\nexport const searchUserSuccess = (payload) => ({\n    type: SEARCH_USER_SUCCESS,\n    payload,\n});\n\nexport const searchUserError = (error) => ({\n    type: SEARCH_USER_ERROR,\n    error,\n});\n\n\n//Get users thunk\nexport const getUsers = () => (dispatch) => {\n    dispatch(loadingUsers());\n    return axios\n        .get(`${base_url}/users`)\n        .then((res) => {\n            const users = normalizeData(res.data.users);\n            dispatch(getUsersSuccess(users));\n        })\n        .catch((err) => {\n            dispatch(getUsersError(err));\n        })\n};\n\n//Create user thunk\nexport const createUser = (data) => (dispatch) => {\n    dispatch(loadingUsers());\n    return axios\n        .post(`${base_url}/users`, data, { headers: { \"Content-Type\": \"multipart/form-data\" } })\n        .then((res) => {\n            dispatch(createUserSuccess(res.data.msg));\n        })\n        .catch((err) => {\n            dispatch(createUserError(err));\n        });\n};\n\n//Edit user thunk\nexport const editUser = (id, data) => (dispatch) => {\n    dispatch(loadingUsers());\n    return axios\n        .patch(`${base_url}/users/${id}`, data, { headers: { \"Content-Type\": \"multipart/form-data\" } })\n        .then((res) => {\n            dispatch(editUserSuccess(res.data.user));\n        })\n        .catch((err) => {\n            dispatch(editUserError(err));\n        });\n};\n\n//Search user thunk\nexport const searchUser = (id) => (dispatch) => {\n    dispatch(loadingUsers());\n    return axios\n        .get(`${base_url}/users/${id}`)\n        .then((res) => {\n            dispatch(searchUserSuccess(res.data.user));\n        })\n        .catch((err) => {\n            dispatch(searchUserError(err));\n        });\n};\n\n//Delete user thunk\nexport const deleteUser = (id) => (dispatch) => {\n    dispatch(loadingUsers());\n    return axios\n        .delete(`${base_url}/users/${id}`)\n        .then((res) => {\n            dispatch(deleteUserSuccess(res.data.user));\n        })\n        .catch((err) => {\n            dispatch(deleteUserSuccess(err));\n        })\n};\n\n\n\n","export const normalizeData = (arr) => {\n    return arr.reduce((acc, item) => {\n        return { ...acc, [item._id]: item };\n    }, {});\n};\n\n\nexport const denormalizeData = (obj) => {\n    return Object.values(obj);\n};","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Error = styled.div`\ncolor:red;\nfont-size: 15px;\n`\n\nconst UserForm = ({ register, errors, preloadedValues }) => {\n\n    return (\n        <form className=\"uk-form-stacked uk-grid-small\" uk-grid=\"true\">\n            <div className=\"uk-margin uk-width-1-2\">\n                <label className=\"uk-form-label\">Nombre:</label>\n                <div className=\"uk-form-controls\">\n                    <input\n                        className=\"uk-input\"\n                        type=\"text\"\n                        name=\"name\"\n                        ref={register({ required: true })}\n                    />\n                </div>\n                {errors.name && <Error>Agregar usuario</Error>}\n            </div>\n            <div className=\"uk-margin uk-width-1-2\">\n                <label className=\"uk-form-label\">Apellido:</label>\n                <div className=\"uk-form-controls\">\n                    <input\n                        className=\"uk-input\"\n                        type=\"text\"\n                        name=\"last_name\"\n                        ref={register({ required: true })}\n                    />\n                </div>\n                {errors.username && <Error>Agregar apellido</Error>}\n            </div>\n            <div className=\"uk-margin uk-width-1-2\">\n                <label className=\"uk-form-label\">Usuario:</label>\n                <div className=\"uk-form-controls\">\n                    <input\n                        className=\"uk-input\"\n                        type=\"text\"\n                        name=\"username\"\n                        ref={register({ required: true })}\n                    />\n                </div>\n                {errors.username && <Error>Asignar un usuario</Error>}\n            </div>\n            <div className=\"uk-margin uk-width-1-2\">\n                <label className=\"uk-form-label\">Contraseña:</label>\n                <div className=\"uk-form-controls\">\n                    <input\n                        className=\"uk-input\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"minimo de 6 caracteres \"\n                        ref={register({ required: true, min: 6 })}\n                    />\n                </div>\n                {errors.password && errors.password.type === \"required\" && <Error>Establer contraseña</Error>}\n                {errors.password && errors.password.type === \"min\" && <Error>La contraseña debe tener minimo 6 caracteres</Error>}\n            </div>\n            <div className=\"uk-margin uk-width-2-3\">\n                <label className=\"uk-form-label\">Permisos:</label>\n                <div className=\"uk-form-controls\">\n                    <select className=\"uk-select\" name=\"role\" ref={register({ required: true })}>\n                        <option>Usuario</option>\n                        <option>Administrador</option>\n                    </select>\n                </div>\n                {errors.role && <Error>Asignar permisos</Error>}\n            </div>\n            <div className=\"uk-margin uk-width-1-3\">\n                <label className=\"uk-form-label\">Foto de perfil:</label>\n                <div className=\"uk-form-controls\" uk-form-custom=\"true\">\n                    <input type=\"file\" name=\"profile_picture\" ref={register} />\n                    <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">\n                        Seleccionar...\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default UserForm;","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../../redux/UsersDuck\";\nimport UserForm from \"../Common/UserForm\";\n\nconst NewUser = () => {\n    const dispatch = useDispatch();\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = (data) => {\n        const formData = new FormData();\n        for (let key in data) {\n            if (key === \"profile_picture\") {\n                formData.append(key, data[key][0])\n            } else {\n                formData.append(key, data[key]);\n            }\n        };\n        dispatch(createUser(formData));\n    };\n\n\n    return (\n        <div>\n            <button uk-toggle=\"target: #new-user\" type=\"button\" className=\"uk-margin-bottom\">Registrar nuevo usuario</button>\n\n            <div id=\"new-user\" uk-modal=\"true\">\n                <div className=\"uk-modal-dialog\">\n\n                    <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\n                    <div className=\"uk-modal-header\">\n                        <h2 className=\"uk-modal-title\">Nuevo usuario</h2>\n                    </div>\n\n                    <div className=\"uk-modal-body\">\n                        <UserForm register={register} errors={errors}/>\n                    </div>\n                    <div className=\"uk-modal-footer uk-text-right\">\n                        <button className=\"uk-button\" type=\"button\" onClick={handleSubmit(onSubmit)}>Guardar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewUser;","import React from \"react\";\nimport NewUser from \"./NewUser\";\n\nconst TableCard = () => {\n    return (\n        <div className=\"uk-card uk-card-default\">\n            <div className=\"uk-card-media-top\">\n                <img className=\"uk-align-center\" src=\"https://res.cloudinary.com/karen491/image/upload/v1594178220/cleanvel/App%20pictures/table-image_zitbkx.jpg\" alt=\"\" width={380} />\n            </div>\n            <div className=\"body-card\">\n                <NewUser />\n            </div>\n        </div>\n    )\n}\n\nexport default TableCard;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editUser } from \"../../redux/UsersDuck\";\n\nconst EditForm = ({ _id, data }) => {\n    const dispatch = useDispatch();\n    const [user, setUser] = useState({});\n\n    const handleChange = (e) => {\n        const key = e.target.name;\n        const value = e.target.files || e.target.value;\n        setUser((prevState) => ({ ...prevState, [key]: value }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        for (let key in user) {\n            if (key === \"profile_picture\") {\n                formData.append(key, user[key][0])\n            } else {\n                formData.append(key, user[key]);\n            }\n        };\n        dispatch(editUser(formData));\n    };\n\n    return (\n        <div>\n            <form className=\"uk-form-stacked uk-grid-small\" uk-grid=\"true\">\n                <div className=\"uk-margin uk-width-1-2\">\n                    <label className=\"uk-form-label\">Nombre:</label>\n                    <div className=\"uk-form-controls\">\n                        <input\n                            value={data.name}\n                            onChange={handleChange}\n                            className=\"uk-input\"\n                            type=\"text\"\n                            name=\"name\"\n                        />\n                    </div>\n                </div>\n                <div className=\"uk-margin uk-width-1-2\">\n                    <label className=\"uk-form-label\">Apellido:</label>\n                    <div className=\"uk-form-controls\">\n                        <input\n                            value={data.last_name}\n                            onChange={handleChange}\n                            className=\"uk-input\"\n                            type=\"text\"\n                            name=\"last_name\"\n                        />\n                    </div>\n                </div>\n                <div className=\"uk-margin uk-width-1-2\">\n                    <label className=\"uk-form-label\">Usuario:</label>\n                    <div className=\"uk-form-controls\">\n                        <input\n                            value={data.username}\n                            onChange={handleChange}\n                            className=\"uk-input\"\n                            type=\"text\"\n                            name=\"username\"\n                        />\n                    </div>\n                </div>\n                <div className=\"uk-margin uk-width-2-3\">\n                    <label className=\"uk-form-label\">Permisos:</label>\n                    <div className=\"uk-form-controls\">\n                        <select className=\"uk-select\" name=\"role\" value={data.role} id=\"role\" onChange={handleChange}>\n                            <option>Usuario</option>\n                            <option>Administrador</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"uk-margin uk-width-1-3\">\n                    <label className=\"uk-form-label\">Foto de perfil:</label>\n                    <div className=\"uk-form-controls\" uk-form-custom=\"true\">\n                        <input type=\"file\" name=\"profile_picture\" />\n                        <button className=\"uk-button uk-button-default\" type=\"button\" tabIndex=\"-1\">\n                            Seleccionar...\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default EditForm;\n\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchUser } from \"../../redux/UsersDuck\";\nimport EditForm from \"../Common/EditForm\";\n\nconst EditUser = ({ _id }) => {\n    const dispatch = useDispatch();\n    const editableUser = useSelector(state => state.users.editableUser);\n\n    const handleClick = () => {\n        dispatch(searchUser(_id));\n    };\n\n    return (\n        <div>\n            <a uk-toggle=\"target: #edit-warning\" href=\"/usuarios\" className=\"uk-icon-button\" uk-icon=\"file-edit\" type=\"button\" onClick={handleClick}></a>\n\n            <div id=\"edit-warning\" uk-modal=\"true\">\n                {editableUser ?\n                    <div className=\"uk-modal-dialog uk-modal-body\">\n                        <h4><span uk-icon=\"icon: warning; ratio: 3\"></span>\n                            {editableUser.name} {editableUser.last_name}\n                        </h4>\n                        <div>\n                            <button className=\"uk-button uk-button-default\" type=\"button\" uk-toggle=\"target: #toggle-usage\">Editar</button>\n                            <div id=\"toggle-usage\" hidden>\n                                <EditForm data={editableUser} _id={_id}/>\n                            </div>\n                        </div>\n                        <hr></hr>\n                        <p className=\"uk-text-right\">\n                            <button className=\"button-nb uk-modal-close\" type=\"button\">Cancelar</button>\n                        </p>\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport default EditUser;\n\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchUser, deleteUser } from \"../../redux/UsersDuck\";\n\nconst DeleteUser = ({ _id }) => {\n    const dispatch = useDispatch();\n    const editableUser = useSelector(state => state.users.editableUser);\n\n    const handleClick = () => {\n        dispatch(searchUser(_id));\n    };\n\n    const handleDelete = (id) => {\n        id = editableUser._id;\n        dispatch(deleteUser(id));\n    }\n\n    return (\n        <div>\n            <a uk-toggle=\"target: #delete-warning\" href=\"/usuarios\" className=\"uk-icon-button\" uk-icon=\"trash\" type=\"button\" onClick={handleClick}></a>\n\n            <div id=\"delete-warning\" uk-modal=\"true\">\n                {editableUser ?\n                    <div className=\"uk-modal-dialog uk-modal-body\">\n                        <h4><span uk-icon=\"icon: warning; ratio: 3\"></span>\n                            {`¿Estas seguro que deseas eliminar a ${editableUser.name} ${editableUser.last_name} de la base de datos?`}\n                        </h4>\n                        <hr></hr>\n                        <p className=\"uk-text-right\">\n                            <button className=\"button-nb uk-modal-close\" type=\"button\">Cancelar</button>\n                            <button className=\"button uk-modal-close\" type=\"button\" onClick={handleDelete}>\n                                Eliminar usuario\n                            </button>\n                        </p>\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport default DeleteUser;","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers, deleteUser } from \"../../redux/UsersDuck\";\nimport { denormalizeData } from \"../../utils/formatters\";\nimport TableCard from \"./TableCard\";\nimport EditUser from \"./EditUser\";\nimport DeleteUser from \"./DeleteUser\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/es\"\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\ndayjs.extend(LocalizedFormat);\n\nconst UserPicture = styled.img`\nwidth: 40px;\nheight: 40px;\nborder-radius: 40%;\n`\n\nconst TableBorder = styled.table`\nborder: 2px solid rgb(214, 207, 207); \n`\n\nconst TableTitle = styled.h2`\ncolor: rgb(8, 4, 46);\n`\n\nconst TableHead = styled.td`\ncolor: rgb(15, 82, 9);\nborder: 1px solid rgb(214, 207, 207);\ntext-transform: capitalize;\nfont-size: 18px;\nfont-weight: 500;\n`\n\nconst TableCell = styled.td`\nborder: 1px solid rgb(214, 207, 207);\n`\n\nconst UsersTable = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(state => state.users.users);\n\n    useEffect(() => {\n        dispatch(getUsers());\n    }, [dispatch]);\n\n    return (\n        <div className=\"uk-flex-middle uk-margin-top\" uk-grid=\"true\">\n            <TableCard />\n            <div className=\"uk-width-2-3@m uk-height-large\" uk-overflow-auto=\"true\">\n                <TableBorder className=\"uk-table uk-table-divider\">\n                    <caption className=\"uk-margin-right\">\n                        <TableTitle className=\"uk-text-center\">\n                            <span><img className=\"uk-margin-small-right\" src=\"https://res.cloudinary.com/karen491/image/upload/v1594177958/cleanvel/App%20pictures/users-icon_bihpzi.png\" alt=\"\" width={60} /></span>\n                                Usuarios Cleanvel\n                            </TableTitle>\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th className=\"uk-text-center\"><span uk-icon=\"grid\"></span></th>\n                            <TableHead>Nombre</TableHead>\n                            <TableHead>Usuario</TableHead>\n                            <TableHead>Permisos</TableHead>\n                            <TableHead>Activo desde</TableHead>\n                            <TableHead>Acciones</TableHead>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {denormalizeData(users).map((user, index) => (\n                            <tr key={index}>\n                                <TableCell><UserPicture className=\"uk-preserve-width\" src={user.profile_picture} alt=\"\"></UserPicture></TableCell>\n                                <TableCell>{user.name} {user.last_name}</TableCell>\n                                <TableCell>{user.username}</TableCell>\n                                <TableCell>{user.role}</TableCell>\n                                <TableCell>{dayjs(user.createdAt).locale(\"es\").format(\"MMMM YYYY\")}</TableCell>\n                                <td className=\"uk-flex\">\n                                    <EditUser {...user} />\n                                    <DeleteUser {...user} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </TableBorder>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersTable;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport UsersTable from \"./components/Users/UsersTable\";\n\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/usuarios\" component={UsersTable} />\n    </Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home/HomeRoute';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\"\nimport user from \"./AuthDuck\";\nimport users from \"./UsersDuck\";\n\nexport const rootReducer = combineReducers({\n    user,\n    users,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \n\nconst store = createStore(\n    rootReducer, \n    composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UIkit from \"uikit\";\nimport \"uikit/dist/css/uikit.min.css\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nUIkit.use(Icons);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}